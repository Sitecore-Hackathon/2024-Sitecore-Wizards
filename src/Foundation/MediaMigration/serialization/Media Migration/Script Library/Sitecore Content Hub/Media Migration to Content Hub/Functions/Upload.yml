---
ID: "0071025d-602c-4264-9a52-dd072ea8261d"
Parent: "6c950601-98fb-4f5d-8adb-0224a32df9b4"
Template: "dd22f1b3-bd87-4db2-9e7d-f7a496888d43"
Path: /sitecore/system/Modules/PowerShell/Script Library/Sitecore Content Hub/Media Migration to Content Hub/Functions/Upload
SharedFields:
- ID: "b1a94ff0-6897-47c0-9c51-aa6acb80b1f0"
  Hint: Script
  Value: |
    function Upload{
        [CmdletBinding()]
        param(
            [Parameter(Mandatory = $true, Position = 0)]
            [item]$item,
            [Parameter(Mandatory = $true, Position = 1)]
            [String]$token
            )
        begin {
            Write-Verbose "Cmdlet Upload - Begin"
            Import-Function Authenticate
            Import-Function Send-HttpRequest
    		
            $uploadsettings = New-Object PSObject @{
                HostUri = "https://ps-ch-playground.sitecoresandbox.cloud"
                TokenItem = "master:/sitecore/system/Settings/Project/token"
            }
            $hostUri = $uploadsettings.HostUri
            
            $itemPath = $item.Paths.FullPath
            $DEFAULT_CHUNK_SIZE = 1000000
            Write-Log -Log Info "========================Upload start. (Item: $itemPath)========================"
        }
        process {
            Write-Verbose "Cmdlet Upload - Process"        
            
            $content = [System.Net.Http.StringContent]::new($body, [System.Text.Encoding]::UTF8, "application/json")
            $itemId = $item.Id
            $response = Send-HttpRequest -uri "$hostUri/api/entities/query?query=String('SitecoreItemId')=='$itemId'" -method "GET" -token $token
            $itemExists = $false
            if($response.response.StatusCode -eq "OK")
            {
                $content = $response.content
                Write-Log -Log Info $content
                if($content.total_items -eq 1){
                    $itemExists = $true  				
                }
            }
            else {
                Write-Log -Log Error "Cmdlet Check-AssetExistsBySitecoreId -Exception"
                Write-Log -Log Error $response.response
                Write-Log -Log Error $response.conten
                throw "Error occured during authentication"
            }
    		
            if($itemExists)
            {
    			Write-Verbose "Upload Skip, As media item is alredy exists in Content Hub. Item Path: $itemPath"
            }
            else {
                $mediaItem = [Sitecore.Data.Items.MediaItem]$item
    			$blobField = $mediaItem.InnerItem.Fields["blob"]
    			$blobStream = $blobField.GetBlobStream()        
                $fileSize = $blobStream.Length
                $fileExtension = $item.Fields["Extension"].Value
                $fileName = $item.Name + "." + $fileExtension
                
                $body = @{
                file_name = $fileName
                file_size = $fileSize
                upload_configuration = @{name = "AssetUploadConfiguration"}
                action = @{ name = "NewAsset"}} | ConvertTo-Json
    			$content = [System.Net.Http.StringContent]::new($body, [System.Text.Encoding]::UTF8, "application/json")
    			$response = Send-HttpRequest -uri "$hostUri/api/v2.0/upload" -method "POST" -content $content -token $token
    			if($response.response.StatusCode -eq "Created") {
    								
    				$return = New-Object PSObject @{
    					UploadIdentifier = $response.content.upload_identifier
    					FileIdentifier = $response.content.file_identifier
    					ProcessUri = $response.response.Headers.Location
    				}
    				
    				if($blobStream.Length -ge $DEFAULT_CHUNK_SIZE) {
                Write-Log -Log Info "Uploading file in chunks of 1 MB each"
                $totalChunks = [Math]::Ceiling([Decimal]$blobStream.Length / [Decimal]$DEFAULT_CHUNK_SIZE)
                $buffer = New-Object byte[] $DEFAULT_CHUNK_SIZE
                $chunkIndex = 0
                $loop = 1
                
                $uploadProcessUri = "$response.response.Headers.Location&chunks=$totalChunks"
                
                while($loop -eq 1) {
                    $bytes_read = $blobStream.Read($buffer, 0, $buffer.Length)
                    if($bytes_read -gt 0) {
                        # Send the file chunk to CH
                        $byteArrayContent = [System.Net.Http.ByteArrayContent]::new($buffer, 0, $buffer.Length)
                        $multiPartFormDataContent = [System.Net.Http.MultipartFormDataContent]::new()
                        $multiPartFormDataContent.Add($byteArrayContent, "file", $fileName)
                        $uri = "$uploadProcessUri&chunk=$chunkIndex"
                        $response = Send-HttpRequest -uri $uri -content $multiPartFormDataContent -token $token -method "POST"
                        $status = $response.response.StatusCode
                        if($status -ne "OK") {
                            Write-Log -Log Error "Chunk ($chunk_index) upload failed. (Item: $itemPath)"
                            Write-Log -Log Error $response.response
                            Write-Log -Log Error $response.content
                            throw "Error occurred while uploading file chunk to Content Hub"
                        }
                        Write-Verbose "Chunk $chunkIndex response"
                        Write-Verbose $response.response
                        Write-Verbose $response.content
                        $chunkIndex = $chunkIndex + 1
                    }
                    else {
                        # Exit the loop after processing all chunks
                        $loop = 0
                    }
                }
                
                $finalChunkResponse = Send-HttpRequest -uri $uploadProcessUri -method "POST" -token $token
                # Write-Host $finalChunkResponse.response
                if($finalChunkResponse.response.StatusCode -ne "OK") {
                    throw "Error occurred while processing final chunk request"
                }
            }
            else {
                # Send entire file to CH
                Write-Log -Log Info "Uploading entire file"
                $multipartFormDataContent = [System.Net.Http.MultipartFormDataContent]::new()
                $multipartFormDataContent.Add([System.Net.Http.StreamContent]::new($blobStream), "file", $fileName)
                $response = Send-HttpRequest -uri $response.response.Headers.Location -method "POST" -token $token -content $multipartFormDataContent
                if($response.statusCode -ne "OK") {
                    Write-Log -Log Error "File upload failed. (Item: $itemPath)"
                    Write-Log -Log Error $response.response
                    Write-Log -Log Error $response.content
                    throw "Error occurred while uploading the file to Content Hub"
                }
            }
    		Write-Host "Line 128"
    		Write-Host "$response.content.upload_identifier"
    		Write-Host $return.UploadIdentifier
    		Write-Host "$response.content.file_identifier"
    		Write-Host $return.FileIdentifier
    		$finalBody = @{
                upload_identifier = $return.UploadIdentifier
                file_identifier = $return.FileIdentifier
            } | ConvertTo-Json
            
            $content = [System.Net.Http.StringContent]::new($finalBody, [System.Text.Encoding]::UTF8, "application/json")
            $response = Send-HttpRequest -uri "$hostUri/api/v2.0/upload/finalize" -content $content -token $token -method "POST"
            Write-Host "Line 137"
    		if($response.response.StatusCode -eq "OK") {
                $result = New-Object PSObject @{
                    Link = $response.response.Headers.Location
                    AssetId = $response.content.asset_id
                    AssetIdentifier = $response.content.asset_identifier
                }
    			
                #Close the stream to release memory
                $blobStream.Close()
    			
    			$entityPropertyBody = @{
                properties = @{
                    SitecoreItemId = $item.Id.ToString()
                    SitecoreItemPath = $item.Paths.FullPath
                    alttext = $item.Fields["Alt"].Value
                }
                self = @{
                    href = $response.response.Headers.Location
                }
                entitydefinition = @{
                    href = "$chHost/api/entitydefinitions/M.Asset"
                }
            } | ConvertTo-Json
            $content = [System.Net.Http.StringContent]::new($entityPropertyBody, [System.Text.Encoding]::UTF8, "application/json")
            $response = Send-HttpRequest -uri $response.response.Headers.Location -token $token -content $content -method "PUT"
            if($response.response.StatusCode -ne "OK") {
                Write-Log -Log Error "Error occured while updating entity properties (id: $assetId, identifier: $assetIdentifier)"
                Write-Log -Log Error response
                Write-Log -Log Error $response.response
                Write-Log -Log Error $response.content
            }
    		
            }
            else {
                Write-Log -Log Error "Cmdlet Finalize-Upload -Exception"
                Write-Log -Log Error $response.response
                Write-Log -Log Error $response.content
                throw "Error occured during finalizing file upload"
            }
    		
    			}
    			else {
    				Write-Log -Log Error "======== Upload initialization -Exception ========"
    				Write-Log -Log Error $response.response
    				Write-Log -Log Error $response.content
    				throw "Error occured while initializing upload"
    			}
    			            
            }
        }
        end {
            Write-Log -Log Info "========================Upload end. (Item: $itemPath)========================"
            Write-Verbose "Cmdlet Upload - End"
        }
    }
Languages:
- Language: en
  Versions:
  - Version: 1
    Fields:
    - ID: "25bed78c-4957-4165-998a-ca1b52f67497"
      Hint: __Created
      Value: 20240302T104337Z
    - ID: "52807595-0f8f-4b20-8d2a-cb71d28c6103"
      Hint: __Owner
      Value: |
        sitecore\tpanchal
    - ID: "5dd74568-4d4b-44c1-b513-0af5f4cda34f"
      Hint: __Created by
      Value: |
        sitecore\tpanchal
    - ID: "8cdc337e-a112-42fb-bbb4-4143751e123f"
      Hint: __Revision
      Value: "bcee6356-172b-4166-84fd-d0b357ae5fa4"
    - ID: "badd9cf9-53e0-4d0c-bcc0-2d784c282f6a"
      Hint: __Updated by
      Value: |
        sitecore\Admin
    - ID: "d9cf14b1-fa16-4ba6-9288-e8a174d4d522"
      Hint: __Updated
      Value: 20240302T130157Z
