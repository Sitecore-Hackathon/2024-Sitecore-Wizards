---
ID: "cf59e786-f717-4a94-9294-50f39c305b1e"
Parent: "6c950601-98fb-4f5d-8adb-0224a32df9b4"
Template: "dd22f1b3-bd87-4db2-9e7d-f7a496888d43"
Path: /sitecore/system/Modules/PowerShell/Script Library/Sitecore Content Hub/Media Migration to Content Hub/Functions/Authenticate
SharedFields:
- ID: "b1a94ff0-6897-47c0-9c51-aa6acb80b1f0"
  Hint: Script
  Value: |
    function Authenticate {
        [CmdletBinding()]
        param()
        
        begin {
            Write-Verbose "Cmdlet Authenticate - Begin"
            Import-Function Send-HttpRequest
    		#Configuration Folder Item - in which the Token will be created.
    		$configurationItem = "master:/sitecore/system/Settings/Content-Hub-Configuration"
            $settings = New-Object PSObject @{
                HostUri = "https://ps-ch-playground.sitecoresandbox.cloud"
                TokenItem = "master:/sitecore/system/Settings/Content-Hub-Configuration/Token"
            }
            $hostUri = $settings.HostUri
        }
        process {
            Write-Verbose "Cmdlet Authenticate - Process"
            $has_token = $false
            $token = $null
            $tokenIsValid = $false
            $tokenItemExists = Test-Path -Path $settings.TokenItem
    		#Checking if the Configuration Folder Item exists or not in the Sitecore Tree.
    		$isConfigItemExists = Test-Path -Path $configurationItem
    		#If the Configuration Folder Item doesn't exist, create one, based on the Folder Template {A87A00B1-E6DB-45AB-8B54-636FEC3B5523}
    		if(!$isConfigItemExists)
    		{
    			New-Item -Path $configurationItem -ItemType "{A87A00B1-E6DB-45AB-8B54-636FEC3B5523}"
    		}
    		
    		#If the Token item exists, Read the value of the field Phrase
            if($tokenItemExists) {
                $tokenItemExists = $true
                $tokenItem = Get-Item -Path $settings.TokenItem
                if($tokenItem) {
                    $token = $tokenItem.Fields["Phrase"].Value
                    if($token) {
                        $has_token = $true
                    }
    				#Checking the response to see, if the Token is Valid
                    $checkResponse = Send-HttpRequest -uri "$hostUri/api/search?take=1" -method "GET" -token $token
                    if($checkResponse.response.StatusCode -eq "OK") {
                        Write-Log -Log Info "Token is valid"
                        $tokenIsValid = $true
                    }
                }
            }
    		#Check for if there is a token generated, and if it is Valid, 
    		#If not, take the credentials from the user and generate a new token
            if($has_token -and $tokenIsValid) {
                $return = New-Object PSObject @{
                    token = $token
                }
                $return
            }
            else {
                $userName = Read-Host "Username"
                $password = Read-Host "Password" -AsSecureString
                $password = [Runtime.InteropServices.Marshal]::PtrToStringAuto([Runtime.InteropServices.Marshal]::SecureStringToBSTR($password))
                
                $body = @{
                    user_name = $userName
                    password = $password
                } | ConvertTo-Json
    			#Authenticate the User and receive the Response from Content Hub
                $content = [System.Net.Http.StringContent]::new($body, [System.Text.Encoding]::UTF8, "application/json")
                $response = Send-HttpRequest -uri "$hostUri/api/authenticate" -method "POST" -content $content
    			#If Successful, Save the Token in Sitecore Item.
    			#Otherwise, Log an Error in the Script Logs for the user to see.
                if($response.response.StatusCode -eq "OK")
                {
    				#Take the Token and save in Sitecore Item, of type Dictionary Entry for future references
                    $token = $response.content.token
                    if(!$tokenItemExists) {
                        $tokenItem = New-Item -Path $settings.TokenItem -ItemType "{6D1CD897-1936-4A3A-A511-289A94C2A7B1}"    
                    }
                    else {
                        $tokenItem = Get-Item -Path $settings.TokenItem
                    }
                    $tokenItem.Editing.BeginEdit()
                    $tokenItem["Phrase"] = $token
                    $tokenItem.Editing.EndEdit()
                    $response.content
                }
                else {
                    Write-Log -Log Error "Cmdlet Authenticate -Exception"
                    Write-Log -Log Error $response.response
                    Write-Log -Log Error $response.content
                    throw "Error occured during authentication"
                }
                
            }
            
        }
        end {
            Write-Verbose "Cmdlet Authenticate - End"
        }
    }
Languages:
- Language: en
  Versions:
  - Version: 1
    Fields:
    - ID: "25bed78c-4957-4165-998a-ca1b52f67497"
      Hint: __Created
      Value: 20240302T104600Z
    - ID: "52807595-0f8f-4b20-8d2a-cb71d28c6103"
      Hint: __Owner
      Value: |
        sitecore\tpanchal
    - ID: "5dd74568-4d4b-44c1-b513-0af5f4cda34f"
      Hint: __Created by
      Value: |
        sitecore\tpanchal
    - ID: "8cdc337e-a112-42fb-bbb4-4143751e123f"
      Hint: __Revision
      Value: "d4bcd5a6-bd40-44bf-8202-026ba8478f0a"
    - ID: "badd9cf9-53e0-4d0c-bcc0-2d784c282f6a"
      Hint: __Updated by
      Value: |
        sitecore\varun
    - ID: "d9cf14b1-fa16-4ba6-9288-e8a174d4d522"
      Hint: __Updated
      Value: 20240302T165047Z
